type User @collection(name: "users") @generateUDFResolvers {
  firstName: String!
  lastName: String!
  nickName: String!
  email: String! @unique
  doc: String! @unique
  password: String
  birthday: Date
  image: String
  userRole: String!
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}

type Contact @collection(name: "contacts") @generateUDFResolvers {
  fullName: String!
  email: String!
  message: String!
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}

type Domain @collection(name: "domains") {
  url: String! @unique
  owner: User!
  billingUser: User!
  techUser: User!
  expires: Date!
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}

type DomainCategory
  @collection(name: "domains_category")
  @generateUDFResolvers {
  name: String! @unique
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}

type Log @collection(name: "logs") @generateUDFResolvers {
  user: ID
  type: String!
  message: String!
  createdAt: Date!
  updatedAt: Date!
  deletedAt: Date
}

type Query {
  findUserByEmail(email: String!): User @resolver(name: "findUserByEmail")
  findUserByEmailAndPassword(email: String!, password: String!): User
    @resolver(name: "findUserByEmailAndPassword")
}
